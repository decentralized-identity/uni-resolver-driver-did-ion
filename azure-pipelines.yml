# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: "Install .NET Core 3.1.x"
  inputs:
    version: '3.1.x'
    packageType: runtime
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'codegloablly'
    scannerMode: 'MSBuild'
    projectKey: 'bmurdoch_uni-resolver-driver-did-ion'
    projectName: 'uni-resolver-driver-did-ion'
  
  # build all projects
- script: dotnet build --configuration $(buildConfiguration)
  displayName: "Build ION driver"
- task: ReviewApp@0
  inputs:
    resourceName: 'ION Universal Resolver Driver'
- task: DotNetCoreCLI@2
  displayName: "Execute unit tests"
  inputs:
    command: test
    projects: '**/tests/*.csproj'
    arguments: '--verbosity=normal --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'

# Generate the report using ReportGenerator (https://github.com/danielpalme/ReportGenerator)
# First install the tool on the machine, then run it
#- script: |
#    dotnet tool install -g dotnet-reportgenerator-globaltool 
#    reportgenerator -reports:$(Build.SourcesDirectory)/tests/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:Cobertura
#  displayName: "Generate coverage report"
- task: reportgenerator@4
  inputs:
    reports: 'tests/coverage.cobertura.xml'
    targetdir: 'CodeCoverage'
    verbosity: Verbose
    title: 'Generate coverage report'

# Publish the code coverage result (summary and web site)
# The summary allows to view the coverage percentage in the summary tab
# The web site allows to view which lines are covered directly in Azure Pipeline
- task: PublishCodeCoverageResults@1
  displayName: 'Publish coverage report'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'
    failIfCoverageEmpty: true
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'